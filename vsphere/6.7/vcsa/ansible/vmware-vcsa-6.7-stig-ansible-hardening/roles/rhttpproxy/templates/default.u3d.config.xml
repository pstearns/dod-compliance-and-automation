<!--  RhttpProxy configuration file for ESX/ESXi -->
<config>
  <!-- the version of this config file -->
  <version>5.0.0.0</version>
  <!-- working directory  -->
  <!--workingDir>##WORKING_DIR##</workingDir-->
  <!-- location to examine for configuration files that are needed -->
  <!--defaultConfigPath>##CONFIG_DIR##</defaultConfigPath-->
  <log>
    <!-- controls where rolling log files are stored -->
    <directory>/var/log/vmware/rhttpproxy/</directory>
    <!-- name of log file -->
    <name>rhttpproxy</name>
    <!-- controls whether logger sends its output to console also -->
    <outputToConsole>false</outputToConsole>
    <!-- If true, log to files on disk -->
    <outputToFiles>true</outputToFiles>
    <!-- default size(in bytes) of each log file before rolling over to next -->
    <maxFileSize>52428800</maxFileSize>
    <!-- default number of log files to rotate amongst -->
    <maxFileNum>10</maxFileNum>
    <!-- If true, logs to syslog -->
    <outputToSyslog>false</outputToSyslog>
    <!-- syslog configuration.  Only used if outputToSyslog is true. -->
    <syslog>
      <!-- syslog identifier to use when logging -->
      <ident>rhttpproxy</ident>
      <!-- syslog facility to use when logging -->
      <facility>local4</facility>
      <!-- The section header contents are placed in this file at startup.
              When vmsyslogd rotates the hostd log file, it logs the content of this
              file to syslog. This is being done so that we don't lose context on log
              rotations.
              IMPORTANT: Value needs to match that in onrotate entry in
              vmsyslog.d/hostd.conf
         -->
      <logHeaderFile>/var/run/vmware/rhttpproxyLogHeader.txt</logHeaderFile>
    </syslog>
  </log>
  <proxy>
    <!-- default location of the primary proxy config file -->
    <endpoints>/etc/vmware-rhttpproxy/endpoints.conf.d/vpxd.conf</endpoints>
    <!-- default location of the endpoints config directory -->
    <endpointsDirectory>/etc/vmware-rhttpproxy/endpoints.conf.d/</endpointsDirectory>
    <!-- HTTP port to be used by the reverse proxy -->
    <httpPort>80</httpPort>
    <!-- HTTPS port to be used by the reverse proxy -->
    <httpsPort>443</httpsPort>
  </proxy>
  <!-- Remove the following node to disable SSL -->
  <ssl>
    <!-- The server private key file -->
    <privateKey>/etc/vmware-rhttpproxy/ssl/rui.key</privateKey>
    <!-- The server side certificate file -->
    <certificate>/etc/vmware-rhttpproxy/ssl/rui.crt</certificate>
    <!-- vecs server name. Currently vecs runs on all node types. -->
    <vecsServerName>localhost</vecsServerName>
  </ssl>
  <vmacore>
    <!--pluginBaseDir>/lib/</pluginBaseDir-->
    <!-- default thread pool configuration for Posix impl -->
    <threadPool>
      <IoMin>2</IoMin>
      <IoMax>44</IoMax>
      <TaskMin>2</TaskMin>
      <TaskMax>18</TaskMax>
      <!-- Do not set MaxFdsPerThread if hostdMinFds is set above -->
      <!-- MaxFdsPerThread> 2048 </MaxFdsPerThread -->
      <NumKeepAlive>8</NumKeepAlive>
      <ThreadCheckTimeSecs>600</ThreadCheckTimeSecs>
      <ThreadStackSizeKb>256</ThreadStackSizeKb>
      <threadNamePrefix>rhttpproxy</threadNamePrefix>
    </threadPool>
    <rootPasswdExpiration>false</rootPasswdExpiration>
    <ssl>
      <doVersionCheck> false </doVersionCheck>
      <!-- allowed SSL/TLS protocol versions -->
      <!-- <protocols>tls1.0,tls1.1,tls1.2</protocols> -->
      <fips>true</fips>
      <libraryPath></libraryPath>
    </ssl>
    <!-- enable plugin loading -->
    <loadPlugins> false </loadPlugins>
    <!-- enable/disable the dynamic loading of plugins -->
    <loadDynamicPlugins> false </loadDynamicPlugins>
    <!-- Enable/disable the stack tracer -->
    <!-- <useStackTracer>false</useStackTracer> -->
    <xml>
      <doc>
        <!-- maximum size of each XML message. -->
        <maxChars>62914560</maxChars>
        <!-- maximum nodes in of each XML message. -->
        <maxNodes>524288</maxNodes>
        <!-- maximum node depth of each XML message. -->
        <maxDepth>1000</maxDepth>
      </doc>
    </xml>
    <http>
      <!-- Num of max proxy connections -->
      <maxConnections> 2048 </maxConnections>
      <!-- CA file, needed to scan all certificates in it and list them as acceptable CAs: -->
      <!-- <clientCAListFile>rootcerts.pem</clientCAListFile> -->
      <!-- Maximum size of a client certificate in case it is requested. -->
      <!-- <clientCertificateMaxSize>4096</clientCertificateMaxSize> -->
    </http>
    <tcpKeepAlive>
      <serverSocket>
        <isEnabled>true</isEnabled>
        <idleTimeSec>900</idleTimeSec> <!-- 15 min -->
        <probeTimeSec>240</probeTimeSec> <!-- 4 min -->
        <probeCount>3</probeCount>
      </serverSocket>
      <clientSocket>
        <isEnabled>true</isEnabled>
        <idleTimeSec>900</idleTimeSec> <!-- 15 min -->
        <probeTimeSec>240</probeTimeSec> <!-- 4 min -->
        <probeCount>3</probeCount>
      </clientSocket>
    </tcpKeepAlive>
  </vmacore>
  <packetCapture>
    <!-- <enabled>true</enabled> -->
    <!-- On startup delete all pcap and pcap.gz files that were last modified
         more than X hours ago and are not part of the current process. -->
    <!-- <validity>72</validity> -->
    <!-- Controls where rolling pcap files are stored -->
    <!-- <directory>/var/log/vmware/rhttpproxy/</directory> -->
    <!-- Size(in bytes) of captured data of each pcap file before rolling over
         to the next. Storing 50 MB of captured data in a pcap file requires a
         pcap file of about ~67.5 MB. -->
    <!-- <maxDataInPcapFile>52428800</maxDataInPcapFile> -->
    <!-- Number of pcap files to rotate amongst -->
    <!-- <maxPcapFilesCount>5</maxPcapFilesCount> -->
    <!-- The application sorts the interface list by ID.
         Interfaces with duplicate IDs are ignored.
         The interface ID and name must match. If they don't, the interface is
         ignored.
         The application can capture network traffic on up to 3 interfaces.
         Interfaces past the third one (sorted alphabetically by ID) are
         ignored.
         If "enabled" is set to "true" and no interfaces are specified, then the
         application will capture network traffic on the "any" interface. -->
    <!--
    <interface id="any">
      <name>any</name>
      <maxDataInPcapFile>52428800</maxDataInPcapFile>
      <maxPcapFilesCount>5</maxPcapFilesCount>
    </interface>
    <interface id="eth0">
      <name>eth0</name>
      <maxDataInPcapFile>52428800</maxDataInPcapFile>
      <maxPcapFilesCount>5</maxPcapFilesCount>
    </interface>
    <interface id="lo">
      <name>lo</name>
      <maxDataInPcapFile>52428800</maxDataInPcapFile>
      <maxPcapFilesCount>5</maxPcapFilesCount>
    </interface>
    -->
  </packetCapture>
</config>